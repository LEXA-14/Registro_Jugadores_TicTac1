@page "/"
@inject PartidasServices partidasServices
@inject JugadoresServicios jugadoresServicios
@inject NavigationManager navigationManager
@using Registro_Jugadores_TicTac1.Models
@using Registro_Jugadores_TicTac1.Services
@rendermode InteractiveServer

<div class="container mx-auto max-w-lg p-6 bg-white rounded-lg shadow-xl text-center">
    <h1 class="text-3xl font-bold mb-6 ">Seleccionar Jugadores</h1>

    <div class="d-flex justify-content-around">
        @*"grid grid-cols-2 gap-8 mb-8"*@
        @* SELECCION DEL JUGADOR X *@
        <div>
            <label class="font-semibold text-xl text-fuchsia-600">Jugador X</label>
            <InputSelect class="form-select mt-2 border-2 border-pink-600 focus:ring-red-600 focus:border-red-600"
                         @bind-Value="partida.Jugador1Id">
                <option value="0" selected disabled>Seleccione un jugador</option>
                @foreach (var jugador in ListaJugadores)
                {
                    <option value="@jugador.JugadorId"
                            disabled="@(jugador.JugadorId == partida.Jugador2Id)">
                        @jugador.Nombres
                    </option>
                }
            </InputSelect>
        </div>

        @* SELECCION DEL JUGADOR O*@
        <div>
            <label class="form-label text-lg text-blue">Jugador O</label>
            <InputSelect class="form-select mt-2 p-2 w-full border rounded-md focus:ring-blue-500 focus:border-blue-500"
                         @bind-Value="partida.Jugador2Id">
                <option value="0" selected disabled>Seleccione un jugador</option>
                @foreach (var jugador in ListaJugadores)
                {
                    <option value="@jugador.JugadorId"
                            disabled="@(jugador.JugadorId == partida.Jugador1Id)">
                        @jugador.Nombres
                    </option>
                }
            </InputSelect>
        </div>
    </div>

    <div class="card-footer">
        @*boton de iniciar Partida*@
    <button class="btn btn-success btn-lg mt-4"
            disabled="@(!ValidoSeleccion)"
            @onclick="IniciarPartida">
        Iniciar Partida
    </button>
    </div>
</div>

@code {
    private List<Jugadores> ListaJugadores = new List<Jugadores>();
    private Partidas partida = new Partidas();

    private bool ValidoSeleccion => partida.Jugador1Id > 0 && partida.Jugador2Id > 0;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            ListaJugadores = await jugadoresServicios.GetList(j=>j.JugadorId>0);
            Console.WriteLine($"Se cargaron {ListaJugadores.Count} jugadores.");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error al cargar los jugadores: {ex.Message}");
        }
    }

    private async Task IniciarPartida()
    {
        if (ValidoSeleccion)
        {
            partida.FechaInicio = DateTime.Now;
            partida.EstadoPartida = "En Progreso";
            partida.EstadoTablero = "---------";
            partida.TurnoJugadorId = partida.Jugador1Id;

            await partidasServices.Registrar(partida);

            navigationManager.NavigateTo($"/JuegoTablero/{partida.PartidaId}");
        }
    }
}
