@page "/Jugadores/Edit/{JugadorId:int}"
@inject JugadoresServicios jugadoresServices
@inject NavigationManager navigationManager
@using RegistroJugadores.Models;
@rendermode InteractiveServer

<PageTitle>Modificar Jugador</PageTitle>

@if(Jugador is null)
{
    <p>Cargando...</p>
}
else
{
    <EditForm Model="Jugador" OnValidSubmit="Modificar">
        <DataAnnotationsValidator/>
        <ValidationSummary/>

        <div class="container">
            <div class="card shadow-lg">
                <div class="card-header text-center">
                    <h5 class="card-title">Modificar Jugador</h5>
                </div>

                <div class="card-body">
                    @*JugadorID*@
                    <div class="mb-3">
                        <label class="form-label"><strong>Jugador ID</strong></label>
                        <InputNumber class="form-control" @bind-Value="Jugador.JugadorId" readonly></InputNumber>
                    </div>

                    @*Nombres*@
                    <div class="mb-3">
                        <label class="form-label"><strong>Nombres</strong></label>
                        <InputText class="form-control" @bind-Value="Jugador.Nombres"></InputText>
                        <ValidationMessage For="() => Jugador.Nombres" />
                    </div>

                    @*Partidas*@
                    <div class="mb-3">
                        <label class="form-label"><strong>Partidas</strong></label>
                        <InputNumber class="form-control" @bind-Value="Jugador.Partidas"></InputNumber>
                        <ValidationMessage For="() => Jugador.Partidas" />
                    </div>
                </div>

                @*footer*@
                <div class="card-footer text-center mt-2">
                    <a href="/Jugadores/Index" class="btn btn-secondary">
                        <span class="bi bi-arrow-left"></span> Volver
                    </a>
                    <button type="submit" class="btn btn-primary bi bi-floppy">Guardar</button>
                    <button type="button" class="btn btn-danger bi bi-trash" @onclick="Eliminar"> Eliminar</button>
                </div>
            </div>
        </div>
    </EditForm>
}

@code{
    [Parameter]
    public int JugadorId { get; set; }
    private Jugadores? Jugador { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (JugadorId > 0)
        {
            Jugador = await jugadoresServices.BuscarId(JugadorId);
        }
    }

    private async Task Modificar()
    {
        if(Jugador != null)
        {
            var exito = await jugadoresServices.Modificar(Jugador);
            if(exito)
            {
                navigationManager.NavigateTo("/Jugadores/Index");
            }
        }
    }

    private async Task Eliminar()
    {
        if(Jugador != null)
        {
            var exito = await jugadoresServices.Eliminar(Jugador.JugadorId);
            if(exito)
            {
                navigationManager.NavigateTo("/Jugadores/Index");
            }
        }
    }
}